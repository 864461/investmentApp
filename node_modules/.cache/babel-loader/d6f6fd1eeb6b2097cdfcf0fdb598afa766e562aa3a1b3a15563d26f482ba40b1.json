{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mugab\\\\Documents\\\\investment calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from \"./Components/HeaderComponent\";\nimport Form from \"./Components/CalculatorForm\";\nimport ResultTable from \"./Components/ResultTable\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [yearlyData, setYearlyData] = useState({});\n  const calculateHandler = userInput => {\n    setYearlyData(yearlyData);\n  };\n  if (yearlyData) {\n    const yearlyData = []; // per-year results\n    let currentSavings = yearlyData.currentSaving; // feel free to change the shape of this input object!\n    const yearlyContribution = yearlyData.yearlySaving; // as mentioned: feel free to change the shape...\n    const expectedReturn = yearlyData.expectedInterest / 100;\n    const duration = yearlyData.investmentDuration;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalSaving: yearlyInterest + yearlyContribution + yearlyContribution\n      });\n    }\n    // do something with yearlyData ...\n  }\n\n  ;\n  const tableResult = /*#__PURE__*/_jsxDEV(ResultTable, {\n    data: yearlyData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 24\n  }, this);\n  const noResult = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Data Available \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 20\n  }, this);\n  const result = yearlyData.length === 0 ? {\n    noResult\n  } : {\n    tableResult\n  };\n  console.log(\"this is the data app \" + JSON.stringify(yearlyData));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), result]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixRBnIuk0dz2gWyl4ngiGqPjZoo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Form","ResultTable","useState","jsxDEV","_jsxDEV","App","_s","yearlyData","setYearlyData","calculateHandler","userInput","currentSavings","currentSaving","yearlyContribution","yearlySaving","expectedReturn","expectedInterest","duration","investmentDuration","i","yearlyInterest","push","year","savingsEndOfYear","totalSaving","tableResult","data","fileName","_jsxFileName","lineNumber","columnNumber","noResult","children","result","length","console","log","JSON","stringify","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/mugab/Documents/investment calculator/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport Header from \"./Components/HeaderComponent\";\nimport Form from \"./Components/CalculatorForm\";\nimport ResultTable from \"./Components/ResultTable\";\nimport {useState} from \"react\";\nfunction App() {\n  const [yearlyData, setYearlyData] = useState({})\n  const calculateHandler = (userInput) => {\n    setYearlyData(yearlyData)\n  };\n\n  if (yearlyData) {\n    const yearlyData = []; // per-year results\n    let currentSavings = yearlyData.currentSaving; // feel free to change the shape of this input object!\n    const yearlyContribution = yearlyData.yearlySaving; // as mentioned: feel free to change the shape...\n    const expectedReturn = yearlyData.expectedInterest / 100;\n    const duration = yearlyData.investmentDuration;\n\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalSaving: yearlyInterest + yearlyContribution + yearlyContribution\n      });\n    }\n    // do something with yearlyData ...\n  }\n  ;\n  const tableResult  = <ResultTable data={yearlyData}/>\n  const noResult = <p>No Data Available </p>\n  const result = yearlyData.length === 0 ?  {noResult} : {tableResult};\n\n  console.log(\"this is the data app \" +  JSON.stringify(yearlyData))\n  return (\n    <div>\n      <Header/>\n      <Form onSubmit={calculateHandler}/>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      {result}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMO,gBAAgB,GAAIC,SAAS,IAAK;IACtCF,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,IAAIA,UAAU,EAAE;IACd,MAAMA,UAAU,GAAG,EAAE,CAAC,CAAC;IACvB,IAAII,cAAc,GAAGJ,UAAU,CAACK,aAAa,CAAC,CAAC;IAC/C,MAAMC,kBAAkB,GAAGN,UAAU,CAACO,YAAY,CAAC,CAAC;IACpD,MAAMC,cAAc,GAAGR,UAAU,CAACS,gBAAgB,GAAG,GAAG;IACxD,MAAMC,QAAQ,GAAGV,UAAU,CAACW,kBAAkB;IAG9C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGT,cAAc,GAAGI,cAAc;MACtDJ,cAAc,IAAIS,cAAc,GAAGP,kBAAkB;MACrDN,UAAU,CAACc,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAEZ,cAAc;QAChCE,kBAAkB,EAAEA,kBAAkB;QACtCW,WAAW,EAAEJ,cAAc,GAAGP,kBAAkB,GAAGA;MACrD,CAAC,CAAC;IACJ;IACA;EACF;;EACA;EACA,MAAMY,WAAW,gBAAIrB,OAAA,CAACH,WAAW;IAACyB,IAAI,EAAEnB;EAAW;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACrD,MAAMC,QAAQ,gBAAG3B,OAAA;IAAA4B,QAAA,EAAG;EAAkB;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1C,MAAMG,MAAM,GAAG1B,UAAU,CAAC2B,MAAM,KAAK,CAAC,GAAI;IAACH;EAAQ,CAAC,GAAG;IAACN;EAAW,CAAC;EAEpEU,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAIC,IAAI,CAACC,SAAS,CAAC/B,UAAU,CAAC,CAAC;EAClE,oBACEH,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACL,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT1B,OAAA,CAACJ,IAAI;MAACuC,QAAQ,EAAE9B;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAGlCG,MAAM;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CA1CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}